[
  {
    "inputs": [
      { "internalType": "address", "name": "_ccipRouter", "type": "address" },
      { "internalType": "address", "name": "_stablecoin", "type": "address" }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  { "inputs": [], "name": "CCIP__InsufficientFee", "type": "error" },
  { "inputs": [], "name": "CCIP__OnlyRouter", "type": "error" },
  { "inputs": [], "name": "CCIP__OnlyStablecoinSupported", "type": "error" },
  { "inputs": [], "name": "CCIP__NoMessageType", "type": "error" },
  { "inputs": [], "name": "CCIP__UnknownMessageType", "type": "error" },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "messageId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "uint64",
        "name": "destChain",
        "type": "uint64"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "CCIPMessageSent",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "messageId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "uint64",
        "name": "sourceChain",
        "type": "uint64"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "CCIPMessageReceived",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "destChainSelector",
        "type": "uint64"
      },
      { "internalType": "bytes", "name": "receiver", "type": "bytes" },
      { "internalType": "uint256", "name": "amount", "type": "uint256" },
      { "internalType": "bytes", "name": "data", "type": "bytes" },
      { "internalType": "address", "name": "feeToken", "type": "address" }
    ],
    "name": "sendCCIPMessage",
    "outputs": [
      { "internalType": "bytes32", "name": "messageId", "type": "bytes32" }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "messageId", "type": "bytes32" },
          {
            "internalType": "uint64",
            "name": "sourceChainSelector",
            "type": "uint64"
          },
          { "internalType": "bytes", "name": "sender", "type": "bytes" },
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          {
            "components": [
              { "internalType": "address", "name": "token", "type": "address" },
              { "internalType": "uint256", "name": "amount", "type": "uint256" }
            ],
            "internalType": "struct Client.EVMTokenAmount[]",
            "name": "destTokenAmounts",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct Client.Any2EVMMessage",
        "name": "any2EvmMessage",
        "type": "tuple"
      }
    ],
    "name": "ccipReceive",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ccipRouter",
    "outputs": [
      {
        "internalType": "contract IRouterClient",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "stablecoin",
    "outputs": [
      { "internalType": "contract IERC20", "name": "", "type": "address" }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
